@{
    ViewData["Title"] = "Home Page";
    DateTime fileLastWrittenDate = MessengerHealth.Models.MessengerFiles.lastWrittenDate;

}
@model List<MessengerHealth.Models.MessengerFiles>

<img id="pitlogo" src="~/Content/Img/pitdroid_logo.png" class="img-responsive top-left col-sm-2" alt="..." />
<div class="text-center">
    <h1 class="display-4">Messaging Status</h1>
    <h5>Last time a file was written in directory: <b>@fileLastWrittenDate</b></h5>
    <h5>Total number of files: @Model.Count</h5>
    <form id="mainForm" method="post" enctype="multipart/form-data" asp-controller="Home" asp-action="Index" class="form-group">
        <input id="jur" type="text" name="jurisdiction" hidden="hidden" />
        <input id="pro" type="text" name="procedureCode" hidden="hidden" />
        <input id="service" type="text" name="service" hidden="hidden" />

        <select id="serviceDropdown" class="btn-lg dropdown-toggle" required>
            <option class="e-popup" value="null">Select a value</option>
            <option class="e-popup" value="In">In</option>
            <option class="e-popup" value="Out">Out</option>
        </select>
        <select id="jurDropdown" class="btn-lg dropdown-toggle" required>
            @*<option class="e-popup" value="null">Select a value</option>*@
        </select>
        <select id="dropdownValues" class="btn-lg dropdown-toggle" required>
            @*<option class="e-popup" value="null">Select a value</option>*@
        </select>
        <input id="submit" type="submit" value="Submit" class="btn btn-primary btn-lg" />
    </form>
    @{ if (Model.Count > 0)
        {
            <h4>Rows in <span class="text-danger"><b>red</b></span> show files sitting in the folder for more than 1h waiting to be processed.</h4>
        }
    }
    <table class="table table-hover table-striped table-responsive">
        <thead>
            <tr>
                <th scope="col" class="text-left">Number</th>
                <th scope="col" class="text-center">FileName</th>
                <th scope="col" class="text-center">Last Accessed Time</th>
                <th scope="col" class="img-responsive">Status</th>
            </tr>
        </thead>
        <tbody>
            @{ int count = 1;}
            @{ foreach (var f in Model)
                {
                    int filePos = count;
                    string fileName = f.GetShortFileName();
                    DateTime time = f.LasTimeAccessed;
                    DateTime now = DateTime.Now;
                    TimeSpan timeSpan = now - time;
                    string srcFile = (timeSpan.TotalMinutes > 60 ? "/Content/Img/alert.svg" : "/Content/Img/waiting.png");
                    <tr class="@(timeSpan.TotalMinutes > 60 ? "danger" : "")">
                        <th scope="row">@filePos</th>
                        <td scope="row">@fileName</td>
                        <td scope="row">@time</td>
                        <td scope="row">
                            <a asp-action="About" aps-route-id="img-@count"><img id="img-@count" src="@srcFile" class="img-responsive" style="width: 20px; height: 20px;" /></a>
                        </td>
                    </tr>
                    count = count + 1;
                }
            }
        </tbody>
    </table>
</div>

@section scripts{
    <script>
        $(document).ready(function () {

            const jurisdictions = ["BE", "IE", "GB", "DE", "NL"];

            let jurisdictionListObject = {
                "Out": {
                    "be": ["APCS", "APM", "BRU", "DPW", "NCTS", "PLDA", "PSA"],
                    "de": ["DAK", "EDI"],
                    "gb": ["CCS", "CFSP", "CNS", "DOVER", "HMRC", "MCP"],
                    "ie": ["AEP", "AES", "AIS", "NCTS"],
                    "nl": ["AGS", "CONF", "CPD", "DGVS", "DMS", "DOMPROC", "NCTS", "PCS", "SAGIMP", "SW", "VWA"],
                },

                "In": {
                    "be": ["APCS", "BRU", "NCTS", "PLDA", "TUL"],
                    "de": ["DAK", "EDI", "EDI2", "EDI3", "EDI4", "EDI-ReTry"],
                    "gb": ["CCS", "CCS2", "CCS3", "CCS4", "CCS-ReTry", "CFSP", "CFSP-ReTry", "CNS", "CNS2", "CNS3", "CNS4", "CNS-ReTry", "DOVER", "HMRC", "HMRC2", "HMRC3", "HMRC4", "HMRC5", "HMRC6", "ICS", "MCP", "MCP2", "MCP3", "MCP4", "MCP-ReTry"],
                    "ie": ["AEP", "AIS", "AES", "NCTS"],
                    "nl": ["AGS", "DGVS", "DMS", "DMS2", "DMS3", "DMS4", "NCTS", "PCS", "PORTBASE", "SAGITTA", "VWA"]
                }
            };

            let dropdown = document.querySelector('#jurDropdown');
            let dropdownValues = document.querySelector('#dropdownValues');
            let serviceDropdown = document.querySelector('#serviceDropdown');

            let service = "";

            $(serviceDropdown).change(event => {
                service = event.target.value;
                if (service == "In" || service == "Out") {
                    dropdown.options.length = 0;

                    for (let i = 0; i < jurisdictions.length; i++) {
                        $('<option>').val(jurisdictions[i]).html(jurisdictions[i]).attr('id', 'jurisdiction_' + jurisdictions[i].toLowerCase()).attr('name', 'jurisdiction').appendTo(dropdown);
                    }
                }
                else {
                    dropdownValues.options.length = 0;
                    $(dropdownValues).val("").html("Select a value");
                    dropdown.options.length = 0;
                    $(dropdown).val("").html("Select a value");

                }
                $(dropdown).val("");
                $(dropdownValues).val("");
            });

            $(dropdown).change(event => {
                let selected = event.target.value;
                let dropdownValues = "";
                if (jurisdictions.includes(selected)) {
                    let el = document.getElementById("dropdownValues");
                    el.options.length = 0;

                    selected = selected.toLowerCase();
                    dropdownValues = jurisdictionListObject[service][selected];

                    createDropdownAndPopulateValues(el, dropdownValues);
                }
            });

            $(dropdown).on('change', () => {
                let jurSelected = document.getElementById('jurDropdown').value;
                $('#jur').val(jurSelected);
            });

            $(dropdownValues).on('change', () => {
                let procSelected = document.getElementById('dropdownValues').value;
                $('#pro').val(procSelected);
            });

            $(serviceDropdown).on('change', () => {
                let serviceSelected = document.getElementById('serviceDropdown').value;
                $('#service').val(serviceSelected);
            });

            $("#submit").click(() => {
                $("jur").val("");
                $("pro").val("");
                $("service").val("");
            });

            $('#pitlogo').click(() => {
                let pitdroidMessage = document.getElementById('pitdroid-mes');
                if (pitdroidMessage == null) {
                    $('<h3>').html(generateRandomText(randomMessagges)).attr('id', 'pitdroid-mes').addClass('text-success').insertBefore('table');
                } else {
                    let currentMessage = pitdroidMessage.textContent;
                    while (currentMessage == pitdroidMessage.textContent) {
                        $(pitdroidMessage).html(generateRandomText(randomMessagges));
                    }
                }
            });

            const randomMessagges = {
                "message1": "\"You know, it's costing me a lot of money to keep these droids even powered up\"",
                "message2": "I don't know you... What can I do for you? You look like a Jedi. Whatever it is... I didn't do it",
                "message3": "Oh Lord, I can't find my message",
            };

            function createDropdownAndPopulateValues(dropdownElement, values)
            {

                dropdownElement.options.length = 0;
                for (let i = 0; i < values.length; i++)
                {
                    $('<option>').val(values[i]).html(values[i]).attr('id', 'procedureCode' + values[i]).attr('name', 'procedure').appendTo(dropdownElement);
                }

                $(dropdownElement).val("");
            }

            function generateRandomText(textObj)
            {
                if (textObj != null)
                {
                    let keys = Object.keys(textObj);
                    let rdn = -1;
                    while (rdn < 0)
                    {
                        rdn = Math.floor(Math.round(Math.random() * keys.length - 1, 1));
                    }
                    let selectedMessage = keys[rdn];
                    return textObj[selectedMessage];
                }
                return "";
            }

            //$('table').on('click', (e) => {
            //    let currentXmlFile = "";
            //    let rows = document.querySelectorAll('tbody > tr');
            //    if (rows != null) {
            //        $(rows).each((index, element) => {
            //            index = index + 1;
            //            let img = document.getElementsByTagName('img')[index];
            //            document.getElementsByTagName('td')[index];
            //            if (img != null) {
            //                if (img.id == e.target.id) {
            //                    let clickedElement = document.getElementById('clicked-elem');
            //                    if (clickedElement == null) {
            //                        $('<p>').html(element.children[1].textContent).attr('id', 'clicked-elem').insertAfter('table');
            //                    } else {
            //                        currentXmlFile = e.target.parentElement.parentElement.parentElement.children[1].textContent;
            //                        $(clickedElement).html(currentXmlFile);
            //                    }
            //                }
            //            }
            //        });
            //    }

            //});
        });
    </script>
}